name: Deployment

env:
  REGISTRY: docker.io
  IMAGE_NAME: liusto258/dearly 
  SERVICE: dearly 
on:
  push:
    branches:
      - main 

jobs:
  push_to_registry:
    name: Push Docker image to DockerHub and Deploy on Google Cloud Run. 
    runs-on: ubuntu-latest

    permissions:
      packages: write 
      contents: read 
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: liusto258/dearly 

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Google Auth 
        id: Auth 
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ secrets.PROJECT_ID }}
          credentials_json: ${{ secrets.CREDENTIALS_JSON }}
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
          region: ${{ secrets.GOOGLE_REGION }}
          env_vars_update_strategy: "overwrite"
          tag: "latest"
          env_vars: |-
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_SSL=${{ secrets.DB_SSL }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            APP_PORT=${{ secrets.APP_PORT }} 
            AWS_PUBLIC_KEY=${{ secrets.AWS_PUBLIC_KEY }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }} 
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
          flags: --port=3000 --allow-unauthenticated

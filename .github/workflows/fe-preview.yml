name: EAS Internal Preview Build

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write
  contents: read
  statuses: write

jobs:
  build:
    name: Internal Preview Build
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/preview-build')

    runs-on: ubuntu-latest

    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      
      - name: Install dependencies
        run: cd frontend && bun install
      
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Extract Linked Issue
        id: extract_issue
        run: |
          ISSUE_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST -d '{"query": "query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: ${{ github.event.issue.number }}) { closingIssuesReferences(first: 1) { nodes { url } } } } }"}' \
            https://api.github.com/graphql | jq -r '.data.repository.pullRequest.closingIssuesReferences.nodes[0].url')
        
          if [[ "$ISSUE_URL" != "null" && -n "$ISSUE_URL" ]]; then
            echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT
          else
            echo "No linked issue found."
            echo "issue_url=" >> $GITHUB_OUTPUT
          fi
        
      - name: Start EAS Build
        id: eas_build
        run: |
          BUILD_OUTPUT=$(eas build --platform ios --non-interactive --no-wait --profile preview --json)
          BUILD_ID=$(echo "$BUILD_OUTPUT" | jq -r '.id')
          if [[ -z "$BUILD_ID" ]]; then 
            echo "Failed to extract BUILD_ID"
            exit 1
          fi
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT

name: EAS Internal Preview Build

on:
  pull_request:
    types:
      - ready_for_review
    paths:
      - "frontend/**"

  issue_comment:
    types: [created]

jobs:
  build:
    # Run only if:
    # 1. PR is ready for review, is a 'feat' PR, and not a draft.
    # 2. A comment with "/trigger-build" is added on a PR.
    if: |
      github.event.issue.pull_request != null &&
      contains(github.event.comment.body, '/preview-build') &&
      github.actor != 'dependabot[bot]'

    concurrency:
      group: pr-${{ github.event.issue.number || github.event.pull_request.number }}
      cancel-in-progress: true

    name: Install and build
    runs-on: ubuntu-latest
    
    env:
      DEPLOY_PLATFORM: ios
      BUILD_PROFILE: preview
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      
      - name: Install dependencies
        run: cd frontend && bun install
      
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Validate env variables
        run: |
          for var in EXPO_PUBLIC_SUPABASE_URL EXPO_PUBLIC_SUPABASE_ANON_KEY; do
            if [[ -z "${!var}" ]]; then
              echo "Missing $var"
              exit 1
            fi
          done
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Extract Linked Issue
        id: extract_issue
        run: |
          ISSUE_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -X POST -d '{"query": "query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: ${{ github.event.pull_request.number }}) { closingIssuesReferences(first: 1) { nodes { url } } } } }"}' \
            https://api.github.com/graphql | jq -r '.data.repository.pullRequest.closingIssuesReferences.nodes[0].url')
        
          if [[ "$ISSUE_URL" != "null" && -n "$ISSUE_URL" ]]; then
            echo "issue_url=$ISSUE_URL" >> $GITHUB_OUTPUT
          else
            echo "No linked issue found."
            echo "issue_url=" >> $GITHUB_OUTPUT
          fi
        
      - name: Start EAS Build
        id: eas_build
        run: |
          BUILD_OUTPUT=$(eas build --platform "$DEPLOY_PLATFORM" --non-interactive --profile "$BUILD_PROFILE" --json)
          BUILD_ID=$(echo "$BUILD_OUTPUT" | jq -r '.id')
          if [[ -z "$BUILD_ID" ]]; then 
            echo "Failed to extract BUILD_ID"
            exit 1
          fi
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT

      - name: Wait for Build Completion
        id: wait_build
        run: |
          while true; do
            STATUS_OUTPUT=$(eas build:list --json | jq -r --arg BUILD_ID "${{ steps.eas_build.outputs.build_id }}" '.[] | select(.id == $BUILD_ID) | .status')
            echo "Current build status: $STATUS_OUTPUT"
            if [[ "$STATUS_OUTPUT" == "finished" ]]; then
              BUILD_URL=$(eas build:list --json | jq -r --arg BUILD_ID "${{ steps.eas_build.outputs.build_id }}" '.[] | select(.id == $BUILD_ID) | .artifacts.buildUrl')
              echo "build_url=$BUILD_URL" >> $GITHUB_OUTPUT
              break
            elif [[ "$STATUS_OUTPUT" == "errored" ]]; then
              echo "Build failed ❌"
              exit 1
            fi
            sleep 60
          done

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: '${{ secrets.DEARLY_SLACK_CHANNEL_ID }}'
          slack-message: |
            Hey <!subteam^${{ secrets.DEARLY_MEMBERS_SLACK_ID }}> designers and engineers! 💛
              
            A new version of the app is ready for testing: "${{ github.event.pull_request.title }}"
              
            📱 Test the changes: ${{ steps.wait_build.outputs.build_url }}
            🔍 View the PR: ${{ github.event.pull_request.html_url }}
            ${{ steps.extract_issue.outputs.issue_url != '' && format('🔗 View the ticket: {0}', steps.extract_issue.outputs.issue_url) || '' }}
        
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        
